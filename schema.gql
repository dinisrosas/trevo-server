# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: ID!
  sid: Float!
  name: String!
  username: String!
  roles: [UserRole!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserRole {
  Seller
  Admin
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AuthSession {
  token: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Betbook {
  id: ID!
  sid: Float!
  bettor: String!
  fixed: Boolean!
  seller: User!
  bets: [Bet!]!
  updatedAt: DateTime!
  createdAt: DateTime!
}

type BetbookEdge {
  cursor: String!
  node: Betbook!
}

type BetbookConnection {
  edges: [BetbookEdge!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type Bet {
  id: ID!
  sid: Float!
  target: Float!
  pick: String!
  amount: Float!
  award: Float
  awardDescription: String
  game: Game!
  betbook: Betbook!
  updown: Boolean
  ball: Int
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Game {
  id: ID!
  sid: Float!
  name: String!
  type: GameType!
  mode: GameMode!
  isoDate: String!
  bets: [Bet!]!
  date: DateTime!
  result: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum GameType {
  EM
  TL
  M1
  LC
  LP
  JE
}

enum GameMode {
  DRAW
  LOTTERY
}

type GameEdge {
  cursor: String!
  node: Game!
}

type GameConnection {
  edges: [GameEdge!]!
  totalCount: Int!
  pageInfo: PageInfo!
}

type GameResult {
  result: String!
  isoDate: String!
}

type Query {
  me: User!
  sellers: [User!]!
  users: [User!]!
  user(id: ID!): User!
  games(before: String, after: String, first: Int, last: Int, finished: Boolean, date: String): GameConnection!
  game(id: ID!): Game!
  latestGameResult(type: String!): GameResult!
  bets: [Bet!]!
  bet(id: ID!): Bet!
  betbooks(before: String, after: String, first: Int, last: Int, fixed: Boolean): BetbookConnection!
  betbook(id: ID!): Betbook!
}

type Mutation {
  registerSeller(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  updatePassword(input: UpdatePasswordInput!): User!
  deleteUser(id: ID!): User!
  login(input: LoginInput!): AuthSession!
  createGame(input: CreateGameInput!): Game!
  updateGame(input: UpdateGameInput!): Game!
  updateGameResult(input: UpdateGameResultInput!): Game!
  deleteGame(id: ID!): Game!
  updateBet(input: UpdateBetInput!): Bet!
  deleteBet(id: ID!): Bet!
  createBetbook(input: CreateBetbookInput!): Betbook!
  updateBetbook(input: UpdateBetbookInput!): Betbook!
  deleteBetbook(id: ID!): Betbook!
}

input CreateUserInput {
  name: String!
  username: String!
  password: String!
}

input UpdateUserInput {
  id: ID!
  name: String!
  username: String!
}

input UpdatePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input LoginInput {
  username: String!
  password: String!
  isAdmin: Boolean
}

input CreateGameInput {
  type: String!
  isoDate: String!
}

input UpdateGameInput {
  id: ID!
}

input UpdateGameResultInput {
  id: ID!
  result: String!
}

input UpdateBetInput {
  id: ID
  award: Float!
  awardDescription: String
}

input CreateBetbookInput {
  bettor: String!
  fixed: Boolean!
  bets: [CreateBetInput!]!
}

input CreateBetInput {
  pick: String!
  target: Float!
  updown: Boolean
  ball: Float
  game: CreateGameInput!
}

input UpdateBetbookInput {
  id: ID!
  fixed: Boolean
}
